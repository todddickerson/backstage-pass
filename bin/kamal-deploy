#!/usr/bin/env bash

# Backstage Pass Kamal 2 Deployment Script
# Modern containerized deployment using Kamal

set -e

echo "üöÄ Deploying Backstage Pass with Kamal 2"
echo "=========================================="

# Color codes for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Check if kamal is installed
if ! command -v kamal &> /dev/null; then
  echo -e "${YELLOW}‚ö†Ô∏è  Kamal not installed. Installing...${NC}"
  gem install kamal
fi

# Check for secrets file
if [ ! -f ".kamal/secrets" ]; then
  echo -e "${RED}‚ùå .kamal/secrets file not found!${NC}"
  echo "   Copy .kamal/secrets.example to .kamal/secrets and fill in your values."
  exit 1
fi

# Source the secrets
export $(cat .kamal/secrets | grep -v '^#' | xargs)

# Parse command line arguments
COMMAND=${1:-deploy}
ENVIRONMENT=${2:-production}

case $COMMAND in
  setup)
    echo -e "${BLUE}üîß Setting up Kamal for first deployment...${NC}"
    
    # Install dependencies
    echo "üì¶ Installing dependencies..."
    bundle install
    yarn install
    
    # Setup Docker buildx for multi-platform builds
    echo "üê≥ Setting up Docker buildx..."
    docker buildx create --use --name backstage-builder || true
    
    # Initialize Kamal
    echo "üö¢ Initializing Kamal..."
    kamal init || true
    
    # Setup servers
    echo "üñ•Ô∏è Setting up servers..."
    kamal setup
    
    echo -e "${GREEN}‚úÖ Kamal setup complete!${NC}"
    ;;
    
  deploy)
    echo -e "${BLUE}üì¶ Deploying application...${NC}"
    
    # Run tests first
    echo "üß™ Running tests..."
    bundle exec rails test || {
      echo -e "${RED}‚ùå Tests failed! Fix them before deploying.${NC}"
      exit 1
    }
    
    # Run security checks
    echo "üîí Running security checks..."
    bundle exec bundler-audit check --update || true
    bundle exec brakeman -q -w2 || true
    
    # Deploy with Kamal
    echo "üöÄ Deploying with Kamal..."
    kamal deploy
    
    echo -e "${GREEN}‚úÖ Deployment complete!${NC}"
    ;;
    
  rollback)
    echo -e "${YELLOW}‚è™ Rolling back to previous version...${NC}"
    kamal rollback
    echo -e "${GREEN}‚úÖ Rollback complete!${NC}"
    ;;
    
  restart)
    echo -e "${BLUE}üîÑ Restarting application...${NC}"
    kamal app restart
    echo -e "${GREEN}‚úÖ Restart complete!${NC}"
    ;;
    
  logs)
    echo -e "${BLUE}üìú Showing application logs...${NC}"
    kamal app logs --follow
    ;;
    
  console)
    echo -e "${BLUE}üíª Opening Rails console...${NC}"
    kamal app exec -i 'bin/rails console'
    ;;
    
  db:migrate)
    echo -e "${BLUE}üóÑÔ∏è Running database migrations...${NC}"
    kamal app exec 'bin/rails db:migrate'
    echo -e "${GREEN}‚úÖ Migrations complete!${NC}"
    ;;
    
  db:seed)
    echo -e "${BLUE}üå± Seeding database...${NC}"
    kamal app exec 'bin/rails db:seed'
    echo -e "${GREEN}‚úÖ Database seeded!${NC}"
    ;;
    
  status)
    echo -e "${BLUE}üìä Checking deployment status...${NC}"
    kamal app details
    echo ""
    kamal accessory details all
    ;;
    
  scale)
    SERVERS=${3:-2}
    echo -e "${BLUE}üìà Scaling to $SERVERS servers...${NC}"
    # This would require updating config/deploy.yml
    echo -e "${YELLOW}‚ö†Ô∏è  Manual scaling requires updating config/deploy.yml${NC}"
    echo "   Add more hosts to the servers.web.hosts section"
    ;;
    
  backup)
    echo -e "${BLUE}üíæ Creating database backup...${NC}"
    TIMESTAMP=$(date +%Y%m%d_%H%M%S)
    kamal accessory exec postgres "pg_dump -U backstage_pass backstage_pass_production" > "backups/db_backup_$TIMESTAMP.sql"
    echo -e "${GREEN}‚úÖ Backup saved to backups/db_backup_$TIMESTAMP.sql${NC}"
    ;;
    
  env:push)
    echo -e "${BLUE}üîê Pushing environment variables...${NC}"
    kamal env push
    echo -e "${GREEN}‚úÖ Environment variables updated!${NC}"
    ;;
    
  cleanup)
    echo -e "${BLUE}üßπ Cleaning up old containers and images...${NC}"
    kamal prune
    echo -e "${GREEN}‚úÖ Cleanup complete!${NC}"
    ;;
    
  *)
    echo "Usage: bin/kamal-deploy [command]"
    echo ""
    echo "Commands:"
    echo "  setup       - Initial server setup"
    echo "  deploy      - Deploy application (default)"
    echo "  rollback    - Rollback to previous version"
    echo "  restart     - Restart application"
    echo "  logs        - Show application logs"
    echo "  console     - Open Rails console"
    echo "  db:migrate  - Run database migrations"
    echo "  db:seed     - Seed database"
    echo "  status      - Show deployment status"
    echo "  scale       - Scale application (requires config update)"
    echo "  backup      - Create database backup"
    echo "  env:push    - Update environment variables"
    echo "  cleanup     - Remove old containers and images"
    exit 1
    ;;
esac

# Show deployment info
if [ "$COMMAND" = "deploy" ] || [ "$COMMAND" = "setup" ]; then
  echo ""
  echo "üìã Post-deployment checklist:"
  echo "  [ ] Check application health: https://backstagepass.app/health"
  echo "  [ ] Verify all services are running: bin/kamal-deploy status"
  echo "  [ ] Monitor logs: bin/kamal-deploy logs"
  echo "  [ ] Test critical user flows"
  echo "  [ ] Check error tracking dashboard"
fi