[{"assignees":[],"body":"**User Story**: As a platform operator I want the application deployed to production so that users can access it\n\n**Acceptance Criteria:**\n- [ ] Application deployed to Heroku/Railway\n- [ ] PostgreSQL database configured\n- [ ] Redis configured for ActionCable & Sidekiq\n- [ ] Background job processing working\n- [ ] SSL certificates configured\n- [ ] Custom domain setup\n- [ ] CDN for assets (Cloudflare)\n- [ ] Error tracking (Honeybadger/Sentry)\n- [ ] Application monitoring\n- [ ] Backup strategy implemented\n\n**Infrastructure Checklist:**\n\n### Core Services:\n- [ ] Web dynos/containers scaled appropriately\n- [ ] Worker dynos for Sidekiq\n- [ ] PostgreSQL with connection pooling\n- [ ] Redis for caching and ActionCable\n- [ ] File storage (S3/R2 for uploads)\n\n### External Services:\n- [ ] LiveKit server configured\n- [ ] Mux account for video distribution\n- [ ] GetStream.io for chat\n- [ ] Stripe webhooks configured\n- [ ] SendGrid/Postmark for emails\n\n### Environment Variables:\n```yaml\nRAILS_MASTER_KEY: [from config/master.key]\nDATABASE_URL: [auto-provided]\nREDIS_URL: [auto-provided]\nBASE_URL: https://backstagepass.app\n\n# LiveKit\nLIVEKIT_API_KEY: xxx\nLIVEKIT_API_SECRET: xxx\nLIVEKIT_HOST: wss://xxx\n\n# Mux\nMUX_TOKEN_ID: xxx\nMUX_TOKEN_SECRET: xxx\n\n# GetStream\nGETSTREAM_API_KEY: xxx\nGETSTREAM_API_SECRET: xxx\n\n# Stripe\nSTRIPE_PUBLISHABLE_KEY: pk_live_xxx\nSTRIPE_SECRET_KEY: sk_live_xxx\nSTRIPE_WEBHOOK_SECRET: whsec_xxx\n\n# Email\nSENDGRID_API_KEY: xxx\n```\n\n### Security:\n- [ ] Secure headers configured\n- [ ] CORS properly configured\n- [ ] Rate limiting implemented\n- [ ] DDoS protection (Cloudflare)\n- [ ] Secrets rotated from development\n\n### Performance:\n- [ ] Database indexes optimized\n- [ ] N+1 queries eliminated (Bullet gem)\n- [ ] CDN configured for assets\n- [ ] Image optimization pipeline\n- [ ] Caching strategy implemented\n\n### Monitoring:\n- [ ] Application Performance Monitoring (APM)\n- [ ] Error tracking (Honeybadger/Sentry)\n- [ ] Uptime monitoring\n- [ ] Log aggregation\n- [ ] Custom metrics dashboard\n\n### Deployment Process:\n- [ ] GitHub Actions CI/CD pipeline\n- [ ] Automated testing before deploy\n- [ ] Database migration strategy\n- [ ] Zero-downtime deployments\n- [ ] Rollback procedure documented","labels":[{"id":"LA_kwDOPu35oc8AAAACKadxIA","name":"ai/ready","description":"Ready for AI implementation","color":"00FF00"},{"id":"LA_kwDOPu35oc8AAAACKady0g","name":"priority/critical","description":"Blocking issues","color":"FF0000"},{"id":"LA_kwDOPu35oc8AAAACKadzdA","name":"type/feature","description":"New functionality","color":"0052CC"},{"id":"LA_kwDOPu35oc8AAAACKad1Ww","name":"sprint/week-4","description":"Week 4 sprint","color":"FBCA04"}],"milestone":{"number":4,"title":"Week 4: Polish","description":"Testing, documentation, Hotwire Native, production prep.","dueOn":"2025-10-13T00:00:00Z"},"number":18,"title":"STORY 14: Production Deployment - Heroku/Railway Setup & Configuration"},{"assignees":[],"body":"**User Story**: As a developer I want comprehensive test coverage so that the platform is stable and reliable\n\n**Acceptance Criteria:**\n- [ ] 80%+ test coverage for models\n- [ ] System tests for all critical user flows\n- [ ] API endpoint tests for all routes\n- [ ] Integration tests for LiveKit streaming\n- [ ] Integration tests for Stripe payments\n- [ ] Integration tests for GetStream chat\n- [ ] Mobile-specific test scenarios\n- [ ] Performance benchmarks established\n\n**Critical Test Flows:**\n1. Creator onboarding and Space setup\n2. Access Pass creation and pricing\n3. User purchase flow with Stripe Elements\n4. Stream hosting with LiveKit\n5. Chat participation with GetStream\n6. Mobile app authentication\n7. Native video player functionality\n8. Waitlist approval workflow\n\n**Technical Requirements:**\n- Fix all failing tests from PRs\n- Use Magic Test for UI recording\n- Add Capybara system tests\n- Mock external services (LiveKit, Stripe, GetStream)\n- Add performance tests with derailed_benchmarks\n- CI/CD pipeline with parallel tests\n\n**Test Data:**\n- Proper Rails 8/Bullet Train seed data\n- Factory Bot factories for all models\n- Realistic test scenarios\n- Edge case coverage","labels":[{"id":"LA_kwDOPu35oc8AAAACKadxIA","name":"ai/ready","description":"Ready for AI implementation","color":"00FF00"},{"id":"LA_kwDOPu35oc8AAAACKady0g","name":"priority/critical","description":"Blocking issues","color":"FF0000"},{"id":"LA_kwDOPu35oc8AAAACKadzdA","name":"type/feature","description":"New functionality","color":"0052CC"},{"id":"LA_kwDOPu35oc8AAAACKad1Ww","name":"sprint/week-4","description":"Week 4 sprint","color":"FBCA04"}],"milestone":{"number":4,"title":"Week 4: Polish","description":"Testing, documentation, Hotwire Native, production prep.","dueOn":"2025-10-13T00:00:00Z"},"number":17,"title":"STORY 13: Comprehensive Test Suite - System & Integration Tests"}]
